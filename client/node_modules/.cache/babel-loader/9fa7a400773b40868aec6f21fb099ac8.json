{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t\\\\Desktop\\\\code\\\\Asteria\\\\client\\\\src\\\\components\\\\Dashboard\\\\Dashboard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { CTX } from '../Store/Store';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: \"50px\",\n    padding: theme.spacing(3, 2)\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\"\n  },\n  chatWindow: {\n    padding: '20px',\n    width: \"70%\",\n    height: \"300px\"\n  },\n  chatBox: {\n    width: \"85%\"\n  },\n  button: {\n    width: \"15%\"\n  }\n}));\n\nfunction Dashboard() {\n  const classes = useStyles(); //CTX store\n\n  const {\n    allChats,\n    sendChatAction,\n    user\n  } = React.useContext(CTX);\n  console.log({\n    allChats\n  });\n  const topics = Object.keys(allChats);\n  const [activeTopic, changeActiveTopic] = React.useState(topics[0]);\n  const [textValue, changeTextValue] = React.useState('');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Chat App\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, activeTopic), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.topicsWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, topics.map(topic => /*#__PURE__*/React.createElement(ListItem, {\n    onClick: e => changeActiveTopic(e.target.innerText),\n    key: topic,\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: topic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chatWindow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, allChats[activeTopic].map((chat, i) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }\n    }, \"M\"),\n    label: chat.from,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    varient: \"body1\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, chat.msg))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: e => changeTextValue(e.target.value),\n    value: textValue,\n    label: \"Send a chat\",\n    className: classes.chatBox,\n    style: {\n      margin: 8\n    },\n    placeholder: \"Hello!\",\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: () => {\n      sendChatAction({\n        from: user,\n        msg: textValue,\n        topic: activeTopic\n      });\n      changeTextValue('');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"send\"))));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/t/Desktop/code/Asteria/client/src/components/Dashboard/Dashboard.js"],"names":["React","makeStyles","Paper","Typography","List","ListItem","ListItemText","Chip","Avatar","Button","TextField","CTX","useStyles","theme","root","margin","padding","spacing","flex","display","alignItems","topicsWindow","width","height","borderRight","chatWindow","chatBox","button","Dashboard","classes","allChats","sendChatAction","user","useContext","console","log","topics","Object","keys","activeTopic","changeActiveTopic","useState","textValue","changeTextValue","map","topic","e","target","innerText","chat","i","from","msg","value","shrink"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport {CTX} from '../Store/Store'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"50px\",\n    padding: theme.spacing(3, 2),\n  },\n  flex: {\n    display: \"flex\",\n    alignItems: 'center',\n  },\n  topicsWindow: {\n    width: \"30%\",\n    height: \"300px\",\n    borderRight: \"1px solid grey\",\n  },\n  chatWindow: {\n    padding: '20px',\n    width: \"70%\",\n    height: \"300px\",\n  },\n  chatBox: {\n    width: \"85%\",\n  },\n  button: {\n    width: \"15%\",\n  },\n}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n\n//CTX store\nconst {allChats, sendChatAction, user} = React.useContext(CTX)\nconsole.log({allChats})\nconst topics = Object.keys(allChats)\n\nconst [activeTopic, changeActiveTopic] = React.useState(topics[0])\nconst [textValue, changeTextValue] = React.useState('')\n\n\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Typography variant=\"h4\" component=\"h4\">\n          Chat App\n        </Typography>\n        <Typography variant=\"h5\" component=\"h5\">\n          {activeTopic}\n        </Typography>\n        <div className={classes.flex}>\n          <div className={classes.topicsWindow}>\n            <List>\n\n              {\n              \n                topics.map((topic) => (\n                <ListItem onClick={e => changeActiveTopic(e.target.innerText)} key={topic} button>\n                  <ListItemText primary={topic} />\n                </ListItem>\n              ))\n              \n              }\n\n            </List>\n          </div>\n          <div className={classes.chatWindow}>\n          {\n\n             allChats[activeTopic].map((chat, i) => (\n                  <div className={classes.flex} key={i}>\n                      <Chip avatar={<Avatar>M</Avatar>} label={chat.from} />\n                <Typography varient=\"body1\" gutterBottom>{chat.msg}</Typography>\n                </div>\n                \n              ))\n              \n          }\n\n          </div>\n        </div>\n        <div className={classes.flex}>\n\n             \n            <TextField\n          onChange={(e) => changeTextValue(e.target.value)}\n          value={textValue}\n          label=\"Send a chat\"\n          className={classes.chatBox}\n          style={{ margin: 8 }}\n          placeholder=\"Hello!\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <Button \n        variant=\"contained\" \n        color=\"primary\" \n        className={classes.button} \n        onClick={() => {\n            sendChatAction({from: user, msg: textValue, topic: activeTopic });\n            changeTextValue('');\n        }}\n        >\n              send\n        </Button>\n        </div>\n      </Paper>\n    </>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}