{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\t\\\\Desktop\\\\code\\\\Asteria\\\\client\\\\src\\\\components\\\\Store\\\\Store.js\";\nimport React from 'react';\nimport io from 'socket.io-client';\nexport const CTX = React.createContext();\nconst initState = {\n  Ira: [{\n    from: 'Ira',\n    msg: 'Hey Cutie'\n  }],\n  Antonio: [{\n    from: 'Antonio',\n    msg: 'hello'\n  }],\n  Moe: [{\n    from: 'Moe',\n    msg: 'hello'\n  }],\n  Casey: [{\n    from: 'Casey',\n    msg: 'hello'\n  }],\n  Bob: [{\n    from: 'Casey',\n    msg: 'hello'\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      return { ...state,\n        [action.payload.topic]: [...state[action.payload.topic], {\n          from: action.payload.from,\n          msg: action.payload.msg\n        }]\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nlet socket;\n\nfunction Store(props) {\n  const [allChats, dispatch] = React.useReducer(reducer, initState);\n\n  if (!socket) {\n    socket = io(':3002');\n    socket.on('chat message', function (msg) {\n      dispatch({\n        type: 'RECIEVE_MESSAGE',\n        payload: msg\n      });\n    });\n  }\n\n  const user = 'Chris' + Math.random(100).toFixed(2);\n  return /*#__PURE__*/React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nexport default Store;","map":{"version":3,"sources":["C:/Users/t/Desktop/code/Asteria/client/src/components/Store/Store.js"],"names":["React","io","CTX","createContext","initState","Ira","from","msg","Antonio","Moe","Casey","Bob","reducer","state","action","type","payload","topic","sendChatAction","value","socket","emit","Store","props","allChats","dispatch","useReducer","on","user","Math","random","toFixed","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAKC,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,aAAN,EAAZ;AAER,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAE,CACD;AAACC,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GADC,CADS;AAKdC,EAAAA,OAAO,EAAE,CAEL;AAACF,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAFK,CALK;AASdE,EAAAA,GAAG,EAAE,CACD;AAACH,IAAAA,IAAI,EAAE,KAAP;AAAcC,IAAAA,GAAG,EAAE;AAAnB,GADC,CATS;AAadG,EAAAA,KAAK,EAAE,CACH;AAACJ,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADG,CAbO;AAiBdI,EAAAA,GAAG,EAAE,CACD;AAACL,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADC;AAjBS,CAAlB;;AAuBA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,iBAAL;AACK,aAAO,EACZ,GAAGF,KADS;AACF,SAACC,MAAM,CAACE,OAAP,CAAeC,KAAhB,GAAwB,CAC9B,GAAGJ,KAAK,CAACC,MAAM,CAACE,OAAP,CAAeC,KAAhB,CADsB,EAE9B;AACIX,UAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAeV,IADzB;AAEIC,UAAAA,GAAG,EAAEO,MAAM,CAACE,OAAP,CAAeT;AAFxB,SAF8B;AADtB,OAAP;;AAST;AACI,aAAOM,KAAP;AAZJ;AAcH;;AAGD,SAASK,cAAT,CAAwBC,KAAxB,EAA+B;AAC3BC,EAAAA,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA4BF,KAA5B;AACH;;AAED,IAAIC,MAAJ;;AAEA,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAElB,QAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBzB,KAAK,CAAC0B,UAAN,CAAiBd,OAAjB,EAA0BR,SAA1B,CAA7B;;AACA,MAAI,CAACgB,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGnB,EAAE,CAAC,OAAD,CAAX;AACAmB,IAAAA,MAAM,CAACO,EAAP,CAAU,cAAV,EAA0B,UAAUpB,GAAV,EAAe;AACvCkB,MAAAA,QAAQ,CAAC;AAACV,QAAAA,IAAI,EAAC,iBAAN;AAAyBC,QAAAA,OAAO,EAAET;AAAlC,OAAD,CAAR;AACD,KAFD;AAGH;;AAED,QAAMqB,IAAI,GAAG,UAAUC,IAAI,CAACC,MAAL,CAAY,GAAZ,EAAiBC,OAAjB,CAAyB,CAAzB,CAAvB;AAEA,sBACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACP,MAAAA,QAAD;AAAWN,MAAAA,cAAX;AAA2BU,MAAAA;AAA3B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,KAAK,CAACS,QADP,CADJ;AAOH;;AAED,eAAeV,KAAf","sourcesContent":["import React from 'react'\nimport io from 'socket.io-client'\n\n\n\n\n export const CTX = React.createContext();\n\nconst initState = {\n    Ira: [\n        {from: 'Ira', msg: 'Hey Cutie'},\n    \n    ],\n    Antonio: [\n    \n        {from: 'Antonio', msg: 'hello'},\n    ],\n    Moe: [\n        {from: 'Moe', msg: 'hello'},\n      \n    ],\n    Casey: [\n        {from: 'Casey', msg: 'hello'},\n\n    ],\n    Bob: [\n        {from: 'Casey', msg: 'hello'},\n\n    ]\n}\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case 'RECIEVE_MESSAGE':\n             return {\n        ...state, [action.payload.topic]: [\n            ...state[action.payload.topic],\n            {\n                from: action.payload.from,\n                msg: action.payload.msg \n            }\n        ]\n      }\n    default:\n        return state\n    }\n}\n\n\nfunction sendChatAction(value) {\n    socket.emit('chat message', value);\n}\n\nlet socket;\n\nfunction Store(props) {\n    \n    const [allChats, dispatch] = React.useReducer(reducer, initState)\n    if (!socket) {\n        socket = io(':3002')\n        socket.on('chat message', function (msg) {\n          dispatch({type:'RECIEVE_MESSAGE', payload: msg});\n        })\n    }\n\n    const user = 'Chris' + Math.random(100).toFixed(2)\n\n    return (\n        <CTX.Provider value={{allChats, sendChatAction, user}} >\n        {props.children}\n        </CTX.Provider>\n            \n        \n    )\n}\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}